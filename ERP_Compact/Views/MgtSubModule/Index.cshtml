@model ERP_Compact.Models.SubModuleViewModel
@{
    ViewBag.Title = "Sub Module";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/datatables/dataTables.bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.js"></script>
<script src="~/Scripts/dataTables.bootstrap.js"></script>
<script type="text/javascript">
        $(function () {

            $('#ctable').dataTable();

</script>
<script src="~/Scripts/AutoComplete/scSubModule.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#msgSuccess').hide();
        LoadSubModuleDropDown_ToCreate();
        LoadSubModuleDropDown_ToEdit();
        $(".discussion-comment").click(function (event) {
            $('#SubModuleID').val($(this).attr("discussion-id"));
            $('#myModal').modal('show');
            $('#btnUpdate').show();
            $('#btnAdd').hide();
            var w = "#SubModuleID";
            var url = '@Url.Content("~/")' + "Utility/LoadSubModule";
                $.getJSON(url, { SelectID: $(w).val() }, function (data) {

                    $('#SubModuleID').val(data["SubModuleID"]);
                    $('#SubModuleName').val(data["SubModuleName"]);
                    $('#SubModuleLevel').val(data["SubModuleLevel"]);
                });

            });
    });

    function LoadSubModuleDropDown_ToCreate() {
        var select = $('select[name=ModuleID]');
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/MgtSubModule/LoadSubModuleDropDown_ToCreate/",
            data: JSON.stringify({ id: '@Model.ModuleID' }),
            success: function (data) {
                var res = "<option>Select</option>";
                for (var i = 0; i < data.length; i++) {
                    res = res + "<option value='" + data[i].ModuleID + "' " + data[i].Selected + ">" + data[i].ModuleName + "</option>";
                }
                select.html(res);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Error on ajax call");
            }
        });
    }
    function LoadSubModuleDropDown_ToEdit() {
        var select = $('select[name=ModuleID]');
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/MgtSubModule/LoadSubModuleDropDown_ToEdit/",
            data: JSON.stringify({ id: '@Model.ModuleID' }),
            success: function (data) {
                var res = "<option>Select</option>";
                for (var i = 0; i < data.length; i++) {
                    res = res + "<option value='" + data[i].ModuleID + "' " + data[i].Selected + ">" + data[i].ModuleName + "</option>";
                }
                select.html(res);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Error on ajax call");
            }
        });
    }

</script>



<div class="panel panel-flat">
    <div class="panel-heading">

        <h2>
            List of Sub Module
        </h2>

    </div>
    <div class="panel-body">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="clearTextBox();">Add New Sub Module</button>
    </div>
    <div class="panel-body">

        <table class="table table-bordered table-hover datatable-highlight" id="ctable">
            <thead><tr><th>Module</th><th>SubModule Name</th><th>SubModule Level</th><th>Action</th></tr></thead>
            <tbody>

                @foreach (var item in Model.SubModuleList)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModuleName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubModuleName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubModuleLevel)
                        </td>
                        <td>
                            <a class="discussion-comment btn" discussion-id="@item.SubModuleID" href="#">Edit</a> ||

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title" id="myModalLabel">Add New Sub Module</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ModuleID, "Module")
                            <div>
                                <select name="ModuleID" id="ModuleID" placeholder="Select" class="select select-search form-control"></select>
                            </div>
                            @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SubModuleName, "Sub Module Name")
                            @Html.HiddenFor(model => model.SubModuleID, new { id = "SubModuleID" })
                            @Html.TextBoxFor(model => model.SubModuleName, new { placeholder = " Sub Module Name", id = "SubModuleName", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubModuleName, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubModuleLevel, "SubModule Level")
                            @Html.TextBoxFor(model => model.SubModuleLevel, new { @required = "required", placeholder = " SubModule Level Name", id = "SubModuleLevel", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubModuleLevel, "", new { @class = "text-danger" })

                        </div>
                        
                    </form>
                    <div class="form-group" id="msgSuccess"><h4 class="alert alert-danger">Data is successfully Saved on database.</h4></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAdd" onclick="return Add();">Add</button>
                    <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>



