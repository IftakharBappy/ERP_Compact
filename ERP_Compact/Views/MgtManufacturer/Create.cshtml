@model ERP_Compact.Models.ManufacturerViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2>Create Manufacturer</h2>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @using (Html.BeginForm("Create", "MgtManufacturer", FormMethod.Post, new { enctype = "multipart/form-data", id = "thisForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ManufacturerID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ManufacturerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ManufacturerName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.ManufacturerAddress, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ManufacturerAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryOfOrigin, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CountryOfOrigin, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CPhone, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CEmail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CWebsite, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CWebsite, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CWebsite, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CFax, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CFax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CFax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Logo, new { @type = "file" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-2">
                        @Html.ActionLink("<< Manufacturer List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                    <div class="col-md-offset-6 col-md-2">
                        <input type="button" class="btn btn-info" value="Create" onclick="trySubmit()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script>

    function changeDistrictDropDown() {
        var DivisionKey = $("#DivisionKey").val();
        $("#DistrictKey").html("");
        $("#UpazillaKey").html("");
        if (DivisionKey == '') {
            return;
        }
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/Utility/GetDistrictsOfDivision/",
            data: JSON.stringify({ divisionKey: DivisionKey }),
            success: function (data) {
                var res = "<option value=''>Select</option>";
                for (var i = 0; i < data.length; i++) {
                    res = res + "<option value='" + data[i].DistrictKey + "' >" + data[i].DistrictName + "</option>";
                }
                $("#DistrictKey").html(res);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Error on ajax call");
            }
        });
    }

    function changeUpazillaDropDown() {
        var DistrictKey = $("#DistrictKey").val();
        $("#UpazillaKey").html("");
        if (DistrictKey == '') {
            return;
        }
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/Utility/GetUpazillasOfDistrict/",
            data: JSON.stringify({ districtKey: DistrictKey }),
            success: function (data) {
                var res = "<option value=''>Select</option>";
                for (var i = 0; i < data.length; i++) {
                    res = res + "<option value='" + data[i].UpazillaKey + "' >" + data[i].UpazillaName + "</option>";
                }
                $("#UpazillaKey").html(res);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Error on ajax call");
            }
        });
    }

    function trySubmit() {
        var logo = $("#Logo").val();
        if (logo == '') {
            alert("You must select a logo.");
        } else {
            $("#thisForm").submit();
        }
    }
</script>


